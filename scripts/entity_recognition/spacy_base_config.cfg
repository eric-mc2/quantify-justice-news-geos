[components]

[components.age_matcher]
factory = "age_matcher"

[components.block_matcher]
factory = "block_matcher"

[components.gpe_matcher]
factory = "gpe_matcher"

[components.intersection_matcher]
factory = "intersection_matcher"

[components.ner]
factory = "ner"

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = 96

[components.street_matcher]
factory = "street_matcher"

[components.tok2vec]
factory = "tok2vec"

[components.tok2vec.model]
@architectures = "spacy.Tok2Vec.v2"

[components.tok2vec.model.embed]
@architectures = "spacy.MultiHashEmbed.v2"
width = 96
attrs = ["NORM","PREFIX","SUFFIX","SHAPE"]
rows = [5000,1000,2500,2500]
include_static_vectors = false

[components.tok2vec.model.encode]
@architectures = "spacy.MaxoutWindowEncoder.v2"
width = 96
depth = 4
window_size = 1
maxout_pieces = 3

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = "/Users/eric/Dev/quantify-news/data/entity_recognition/labels_dev.spacy"
max_length = 0

[corpora.train]
@readers = "spacy.Corpus.v1"
path = "/Users/eric/Dev/quantify-news/data/entity_recognition/labels_train.spacy"
max_length = 0

[initialize]
vectors = "en_core_web_sm"

[initialize.components]

[initialize.components.gpe_matcher]
comm_area_path = "/Users/eric/Dev/quantify-news/data/geoms/comm_areas.parquet"
neighborhood_path = "/Users/eric/Dev/quantify-news/data/geoms/neighborhoods.csv"

[initialize.components.street_matcher]
street_name_path = "/Users/eric/Dev/quantify-news/data/geoms/street_names.csv"

[nlp]
lang = "en"
pipeline = ["tok2vec","street_matcher","gpe_matcher","age_matcher","ner","block_matcher","intersection_matcher"]
batch_size = 64

[paths]
vectors = "en_core_web_sm"
dev = "/Users/eric/Dev/quantify-news/data/entity_recognition/labels_dev.spacy"
train = "/Users/eric/Dev/quantify-news/data/entity_recognition/labels_train.spacy"

[system]
gpu_allocator = null

[training]
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
optimizer = {"@optimizers":"Adam.v1"}

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001